@import 'lib/plugin_object-fit-images';
@import 'lib/plugin_plumber';
@import 'lib/object_karmilla';
@import 'lib/global_utilities';
@import 'lib/global_colors';
@import 'lib/global_vgrid';
@import 'lib/global_hgrid';
@import 'lib/object_icon';
@import 'lib/object_dropdown';
@import 'lib/object_slider';

$breakpoint-1: 512px;
$breakpoint-2: 768px;

* {
  @include block-reset;
  // @include frame(transparentize(orange, 0.4));
}

a {
  color: $c-font;
  text-decoration: none;
  cursor: pointer;
  span {
    white-space: nowrap;
  }
}

p {
  a {
    @include text-underline;
    // white-space: nowrap;
  }
}

p, h1, h2, h3, h4, h5, h6 {
  hyphens: auto;
  // @include frame(transparentize($c-accent, 0.2));
  &::after { /* italic overflow fix */
    content: '';
    padding: 0 0.25em;
    white-space: nowrap;
    pointer-events: none; /* not working in ie */
  }
}

html {
  // -> critical
  // @include fill-fixed;
  // box-sizing: border-box;
  // <- critical
	-webkit-tap-highlight-color: hsla(0, 0%, 0%, 0);
  font-size: 0px; /* to be overriden */
	body {
    // -> critical
    // @include fill-fixed;
    background: $c-background;
    // <- critical
    // @include hgrid_show($c-accent);
		font-family: map-get(map-get($vgrid_settings, font), name), serif;
		font-weight: 800;
    font-style: italic;
		color: $c-font;
    stroke: $c-font;
		text-rendering: geometricPrecision;
		-moz-osx-font-smoothing: grayscale;
	}
}


*,
*::before,
*::after {
  box-sizing: inherit;
}

*::selection {
	background: transparentize($c-font, 0.75);;
}
*::-moz-selection {
	background: transparentize($c-font, 0.75);;
}

img {
  @include object-fit(cover);
  object-fit: cover;
  // background: hsl(210, 0%, 15%);
  background: invert($c-background);
}

img.cover {
  position: absolute;
  width: 100%;
  height: 100%;
}

.image-group {
	width: 100%;
	height: 100%;
	img {
		position: absolute;
		width: 100%;
		height: 100%;
	}
}

.viewport {
  position: absolute;
  @include hgrid-column(3, 0, 10);
  margin-top: calc(#{vgrid(5)});
  height: calc(100% - #{vgrid(10)});
  z-index: -1;
}

.static-content {
  // -> critical
  // @include auto-alpha(0);
  // position: relative;
  // <- critical
  width: 0;
  height: 100%;
	z-index: 1;
  line-height: 0;
  font-size: 0;
  header {
    margin-top: map-get($vgrid_variables, offset);
    white-space: nowrap;
    .loader {
      @include auto-alpha(0);
      @media screen and (max-width: $breakpoint-1 - 1) {
        @include hgrid-column(0, 0, 12);
      }
      @media screen and (min-width: $breakpoint-1) {
        @include hgrid-column(1, 0, 11);
      }
      @media screen and (min-width: $breakpoint-2) {
        @include hgrid-column(1, 0, 11);
      }
      vertical-align: top;
      p {
        // temporary solutionnnnnnnnn (start)
        margin-top: vgrid(1);
        // temporary solutionnnnnnnnn (end)
        span {
          display: inline-block;
          height: map-get($vgrid_variables, local-weight);
          width: 100%;
          margin-bottom: 1em / map-get($vgrid_variables, fill-reset) * 2 - map-get($vgrid_variables, local-weight) / 2;
          vertical-align: baseline;
          background: transparentize($c-font, 0.75);
          span {
            display: block;
            width: 0;
            height: 100%;
            background: $c-font;
          }
        }
        &::after {
          content: none;
        }
      }
    }
    .menu {
      @include hgrid-column(0, 0, 0);
      ul {
        height: 0;
        li {
          p {
            width: 0;
            // padding-bottom: 0;
            a {
              // @include text-outline;
              box-shadow: none;
              user-select: none;
            }
          }
        }
      }
    }
  }
  footer {
    margin-bottom: map-get($vgrid_variables, offset) * 2 + vgrid(1) * map-get($vgrid_variables, base-void);
    white-space: nowrap;
    position: absolute;
    top: auto;
    left: auto;
    bottom: 0;
    width: 0;
    div {
      @include hgrid-column(11, 0, 0);
      height: 0;
      p {
        width: 0;
      }
    }
  }
}

.dynamic-content {
  // -> critical
  // @include fill-fixed;
  // @include auto-alpha(0);
  // <- critical
	z-index: 0;
	.dynamic-content-inner {
		@include fill-fixed;
	}
}

.mscroll-container { /* the one of which we scroll the overflow */
  @include fill-fixed;
  @include hardware-acceleration;
  // background: transparentize(invert($c-background), 1/3);
  -webkit-backface-visibility: hidden;
  -webkit-overflow-scrolling: touch;
  .mscroll-area { /* the one that holds the overflowing content */
    @include hardware-acceleration;
    position: relative;
    display: inline-block;
    overflow: hidden;
    .mscroll-group { /* the content */
      display: inline-block;
      font-size: 0;
      @media screen and (max-width: $breakpoint-1 - 1) {
        margin: map-get($vgrid_variables, offset) calc(#{hgrid-calc(0)});
      }
      @media screen and (min-width: $breakpoint-1) {
        margin: map-get($vgrid_variables, offset) calc(#{hgrid-calc(1)});
      }
      @media screen and (min-width: $breakpoint-2) {
        margin: map-get($vgrid_variables, offset) calc(#{hgrid-calc(1)});
      }
      float: left; /* added to fix collapsing margins */
    }
    .mscroll-group.clone {
      position: absolute;
      top: auto;
      left: auto;
    }
    .mscroll-group#before {
      z-index: 1;
    }
    .mscroll-group#after {
      z-index: -1;
    }
  }
}

.mscroll-container.mscroll-y {
  overflow-y: scroll;
  .mscroll-area {
    width: 100%;
    .mscroll-group {
      .mscroll-item {
        // latest addition in a hurry... not sure
        padding: vgrid(7) 0;
      }
    }
    .mscroll-group.clone {
      display: block; /* safari fix */
    }
  }
}

.mscroll-container.mscroll-x {
  overflow-x: scroll;
  .mscroll-area {
    height: 100%;
    .mscroll-group {
      height: calc(100% - #{map-get($vgrid_variables, offset)} * 2);
      white-space: nowrap;
      .mscroll-item {
        white-space: normal;
      }
    }
  }
}

// @mixin hgrid-collapse() {
//   $mmm: ceil($hgrid-gutter / 2 * 40) / 40;
//   margin-left: - $mmm;
//   margin-right: - $mmm;
//   padding-left: $mmm;
//   padding-right: $mmm;
//   width: calc(100% + #{$mmm} * 2);
// }

.mscroll-item {
  @include hardware-acceleration;
  @media screen and (max-width: $breakpoint-1 - 1) {
    @include hgrid-column(0, 0, 16);
  }
  @media screen and (min-width: $breakpoint-1) {
    @include hgrid-column(0, 0, 14);
  }
  @media screen and (min-width: $breakpoint-2) {
    @include hgrid-column(0, 0, 14);
  }
  position: relative;
  display: inline-block;
  vertical-align: top;
  height: 100%;
  // height: calc(100% - 2 * #{vgrid(1)});
  // margin-top: vgrid(1);
  // &:last-of-type {
  //  margin-bottom: vgrid(1);
  // }
  article {
    @media screen and (max-width: $breakpoint-1 - 1) {
      @include hgrid-column(0, 0, 16, false);
    }
    @media screen and (min-width: $breakpoint-1) {
      @include hgrid-column(2, 0, 10, false);
    }
    @media screen and (min-width: $breakpoint-2) {
      @include hgrid-column(4, 0, 6, false);
    }
    padding-bottom: vgrid(2);
    margin-top: vgrid(1);
    &:last-of-type {
     margin-bottom: vgrid(1);
    }
    // solution temporaireee (start)
    a {
      @include text-underline;
      // white-space: nowrap;
    }
    // solution temporaireee (end)
    // h1, h2, h3, h4, h5, h6 {
    //   text-align: center;
    //   &::after {
    //     content: none;
    //   }
    // }
  }
  figure {
    position: relative;
    height: 100%;
    @include frame(transparentize($c-accent, 0.2));
    figcaption {
      @media screen and (max-width: $breakpoint-1 - 1) {
        @include hgrid-column(1, 0, 14, false);
      }
      @media screen and (min-width: $breakpoint-1) {
        @include hgrid-column(1, 0, 12, false);
      }
      @media screen and (min-width: $breakpoint-2) {
        @include hgrid-column(1, 0, 10, false);
      }
      position: absolute;
      margin-top: - vgrid(1);
      z-index: 2;
      h2 {
        height: 0; /* flag: leaves height of plumber padding */
        a {
          user-select: none;
        }
      }
    }
    .figdescription {
      @include auto-alpha(0);
      position: absolute;
      overflow-x: hidden;
      overflow-y: scroll;
      height: 100%;
      width: 100%;
      // @include hgrid-collapse();
      // background: transparentize($c-font, 1/3);
      // color: $c-background;
      background: transparentize($c-background, 1/3);
      z-index: 1;
      article {
        @media screen and (max-width: $breakpoint-1 - 1) { /* override */
          @include hgrid-column(1, 0, 14, false);
        }
        @media screen and (min-width: $breakpoint-1) { /* override */
          @include hgrid-column(2, 0, 8, false);
        }
        @media screen and (min-width: $breakpoint-2) { /* override */
          @include hgrid-column(3, 0, 6, false);
        }
        margin-top: vgrid(5);
        &:last-of-type {
         margin-bottom: vgrid(5);
        }
      }
    }
    .image-group {
      // @include hgrid-collapse();
      position: absolute;
      z-index: 0;
    }
  }
}
